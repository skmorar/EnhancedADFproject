{
	"name": "DeltaCopyfromDB_using_ControlTable1",
	"properties": {
		"description": "Copy new or updated rows only from database using external control table",
		"activities": [
			{
				"name": "LookupLastWaterMark",
				"description": "Retrieve the last high-watermark value stored in external control table",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderQuery": {
							"value": "SELECT @{pipeline().parameters.Control_Table_Column_Name} AS WatermarkValue FROM @{pipeline().parameters.Control_Table_Table_Name} ",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SqlServerExternal_ControlTable1",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LookupCurrentWaterMark",
				"description": "Retrieve  the current maximum value in watermark column of source data store",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderQuery": {
							"value": "@concat('SELECT MAX(',pipeline().parameters.Data_Source_WaterMarkColumn, ') AS NewWatermarkValue FROM ',pipeline().parameters.Data_Source_Table_Name)",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SqlServerDataSource1",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "DeltaCopyfromDB",
				"description": "Copy activity to use query to filter the delta data by > last high-watermark and <= current high-watermark from source database, and then only copy the changes to the destination store.",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LookupCurrentWaterMark",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LookupLastWaterMark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderQuery": {
							"value": "SELECT * FROM @{pipeline().parameters.Data_Source_Table_Name} WHERE @{pipeline().parameters.Data_Source_WaterMarkColumn} > '@{activity('LookupLastWaterMark').output.firstRow.WatermarkValue}' AND @{pipeline().parameters.Data_Source_WaterMarkColumn} <= '@{activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue}'",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false,
					"dataIntegrationUnits": 0
				},
				"inputs": [
					{
						"referenceName": "SqlServerDataSource1",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_target",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "UpdateWaterMark",
				"description": "Stored procedure activity to store the new high-watermark value into external control table for delta data loading. ",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DeltaCopyfromDB",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[SP_UPDATE_WATERMARKTABLE]",
					"storedProcedureParameters": {
						"LastModifyDate": {
							"value": {
								"value": "@activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue",
								"type": "Expression"
							},
							"type": "datetime"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "OnPrem_SqlServer",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"Data_Source_Table_Name": {
				"type": "String"
			},
			"Data_Source_WaterMarkColumn": {
				"type": "String"
			},
			"Data_Destination_Container": {
				"type": "String"
			},
			"Data_Destination_Directory": {
				"type": "String"
			},
			"Control_Table_Table_Name": {
				"type": "String"
			},
			"Control_Table_Column_Name": {
				"type": "String"
			}
		},
		"annotations": []
	}
}